apply from: "${rootDir}/gradle/default-project-layout.gradle"

apply plugin: 'war'

dependencies {
	compile project(':org.eclipse.xtext.web.servlet')
    compile project(':org.eclipse.xtext.web.example.statemachine.ide')
	compile project(':org.eclipse.xtext.xbase.web')
	compile project(':org.eclipse.xtext.web.example.entities.ide')
	compile group: 'org.webjars', name: 'requirejs', version: '2.2.0'
	compile group: 'org.webjars', name: 'requirejs-text', version: '2.0.15'
	compile group: 'org.webjars', name: 'jquery', version: '2.2.3'
	compile group: 'org.webjars', name: 'ace', version: '1.2.2'
	compile group: 'org.webjars', name: 'codemirror', version: '5.45.0'
	providedCompile group: 'org.eclipse.jetty', name: 'jetty-annotations', version: '9.3.+'
	providedCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.+'
}

/* 
 * The following download/unpack tasks are currently necessary 
 * because Eclipse Orion does not provide easily consumable artifacts
 */

def orionDir = file('src/main/webapp/orion')
def orionZip = file("$buildDir/orion/built-codeEdit.zip")
def orionUrl = 'http://download.eclipse.org/orion/drops/R-11.0-201602232219/built-codeEdit.zip'

task downloadOrion {
	onlyIf {!orionZip.exists()}
	doLast {
		orionZip.parentFile.mkdirs()
		println "Download $orionUrl"
		ant.get(src: orionUrl, dest: orionZip)
	}
}

task unpackOrion(type: Copy) {
	onlyIf {!orionDir.exists()}
	dependsOn(downloadOrion)
	from(zipTree(orionZip))
	into(orionDir)
}

task jettyRun(type:JavaExec) {
	dependsOn(sourceSets.main.runtimeClasspath, unpackOrion)
	classpath = sourceSets.main.runtimeClasspath.filter{it.exists()}
	main = "org.eclipse.xtext.web.example.jetty.ServerLauncher"
	standardInput = System.in
}

tasks.eclipse.dependsOn(unpackOrion)

uploadArchives.enabled = false
